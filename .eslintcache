[{"C:\\Users\\C\\Desktop\\Udemy\\React\\order-app\\src\\index.js":"1","C:\\Users\\C\\Desktop\\Udemy\\React\\order-app\\src\\App.js":"2","C:\\Users\\C\\Desktop\\Udemy\\React\\order-app\\src\\components\\Layout\\Header.js":"3"},{"size":142,"mtime":1616594953000,"results":"4","hashOfConfig":"5"},{"size":188,"mtime":1629836129419,"results":"6","hashOfConfig":"5"},{"size":492,"mtime":1629835976596,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"irz3ea",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"10"},"C:\\Users\\C\\Desktop\\Udemy\\React\\order-app\\src\\index.js",[],["16","17"],"C:\\Users\\C\\Desktop\\Udemy\\React\\order-app\\src\\App.js",[],"C:\\Users\\C\\Desktop\\Udemy\\React\\order-app\\src\\components\\Layout\\Header.js",["18"],"import classes from './Header.module.css';\r\nimport { Fragment } from 'react';\r\nimport mealsImage from '../../assets/meals.jpg'\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <header className={classes.header}>\r\n                <h2>Order app</h2>\r\n            </header>\r\n            <div className={classes['main-image']}>\r\n                <img src={mealsImage} alt=\"a meal image\"/>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Header;",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":13,"column":17,"nodeType":"25","endLine":13,"endColumn":59},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]